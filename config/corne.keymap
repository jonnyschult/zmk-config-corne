/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "ten.h"
#include "layers.h"
#include "combos.dtsi"

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |       |
            // |      |     |     |  U  |  O  |  E  |   |  A  |  I  |  Y  |     |     |       |
            // |      |     |     |     |     |     |   |     |     |     |     |     |       |
            //                    |     |     | SPC |   | BSP |     |     |

            bindings = <
&none  &none  &none  &none             &none         &none          &none        &none                      &none             &none    &none  &none
&none  &kp A  &kp R  &kp S             &kp T         &kp G          &kp M        &kp N                      &kp E             &kp I    &kp O          &none
&none  &none  &none  &none             &none         &none          &none        &none                      &none         &none  &none       &none
                     &none  &none  &kp SPACE    &kp BACKSPACE  &none  &none
            >;
        };

        numsym_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  [  |  ]   |  {  |  }  |      |      |
            // |      |  6  |  7  |  8  |  9  |  0  |   |  L  |  D   |  U  |  R  |  *   |      |
            // |      |  `  |  ~  |  "  |  '  |  \  |   |  <  |  >   |  -  |  =  |  /   |      |
            //                    | GUI |     | SPC |   | ENT |      | ALT |

            bindings = <
&trans  &kp N1        &kp N2     &kp N3   &kp N4   &kp N5          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans        &trans
&trans  &kp NUMBER_6  &kp N7     &kp N8   &kp N9   &kp NUMBER_0    &kp LEFT          &kp DOWN           &kp UP          &kp RIGHT        &kp ASTERISK  &trans
&trans  &kp GRAVE     &kp TILDE  &kp DQT  &kp SQT  &kp BSLH        &kp LESS_THAN     &kp GREATER_THAN   &kp MINUS       &kp EQUAL        &kp SLASH     &trans
                                 &trans   &trans   &trans          &trans            &trans             &trans
            >;
        };

       fun_layer {
            // -----------------------------------------------------------------------------------------
            // |      | F1  | F4  | F7  | F10 | VOL+|   | BRI+| PASTE| UP  | COPY | ESC  |      |
            // |      | F2  | F5  | F8  | F11 | MUTE|   | PLAY| LEFT | DOWN| RIGHT| PGUP |      |
            // |      | F3  | F6  | F9  | F12 | VOL-|   | BRI-| UNDO | REDO| CUT  | PGDN |      |
            //                    | GUI |     | SPC |   | ENT |      | ALT |

            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp K_PASTE     &kp UP_ARROW    &kp K_COPY  &kp ESC        &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp C_PLAY_PAUSE      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &kp PG_UP      &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp K_UNDO      &kp K_REDO      &kp K_CUT   &kp PAGE_DOWN  &trans
                        &trans  &trans   &trans          &trans                &trans          &trans
            >;
        };

        sys_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     | PRV | NXT |     |   |     |     |     |     |     |      |
            // |      | BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     |     |      |
            // |      | BOOT| RST |     | CLR | CLRA|   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans            &none   &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &none   &none   &none   &none   &trans
&trans  &bootloader   &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none   &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E             &kp R         &kp T          &kp Y        &kp U                     &kp I              &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D             &kp F         &kp G          &kp H        &kp J                     &kp K              &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C             &kp V         &kp B          &kp N        &kp M                     &kp COMMA          &kp DOT  &kp FSLH  &trans
                      &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 2 SPACE    &lt 1 ENTER  &mt LEFT_SHIFT BACKSPACE  &mt RIGHT_ALT ESC
            >;
        };
    };
};